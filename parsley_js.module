<?php

/**
 * Implements hook_menu()
 */


function parsley_js_menu() {
  $items = array();

  /**
   * Admin page to select which form to attach the JS to
   */
  $items['admin/config/user-interface/parsley-js'] = array(
    'title' => 'ParsleyJS Config',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('parsley_js_settings_form'),
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM
  );


  $items['testform'] = array(
    'title' => 'testform',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('parsley_js_test_form'),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK
  );

  return $items;
}

/**
 * Setting page that lets you choose which forms to include the JS on
 */
function parsley_js_settings_form($form, &$form_state) {
  $form['parsley_js_form_ids'] = array(
    '#type' => 'fieldset',
    '#title' => t('Forms IDs'),
  );

  $form['parsley_js_form_ids'][] = array(
    '#type' => 'textfield',
  );

  return system_settings_form($form);
}

function parsley_js_hook_info() {
  $hooks = array();

  $hooks['parsley_js_forms'] = array(
    'group' => 'parsley_js',
  );

  return $hooks;
}

/**
 * Implements hook_parsley_js_forms
 */
function parsley_js_parsley_js_forms() {
  return array(
    'parsley_js_test_form',
  );
}


/**
 * Implements hook_form_alter
 *
 * TODO: Filter which forms to include on using system var
 */
function parsley_js_form_alter(&$form, &$form_state, $form_id) {
  //Check if we have a cache for the form_ids
  $declared_forms = cache_get('parsley_js:form_ids');

  if ($declared_forms === FALSE) {

    //Get all declared forms
    $declared_forms = module_invoke_all('parsley_js_forms');

    if (!empty($declared_forms)) {
      cache_set('parsley_js:form_ids', $declared_forms);
      dpm('set cache');
    }
  }
  elseif (!empty($declared_forms->data)) {
    if (is_array($declared_forms->data) && in_array($form_id, $declared_forms->data)) {

      //Libraries module gives us a nice attach for this
      $form['#attached']['libraries_load'][] = array('parsleyjs');

      //Attach the parsleyjs binder
      $form['#attributes'] = array('data-parsley-validate' => 'data-parsley-validate');

      //Loop through the fields and attach the relevent validator attrib
      foreach ($form as &$element) {
        if (!empty($element['#rules'])) { 
          foreach ($element['#rules'] as $rule) {
            list($attrib, $val) = _parsley_js_rule_parser($rule);
            $element['#attributes'][$attrib] = array($val);
          }
        }
        if (!empty($element['#required']) && $element['#required'] == TRUE){
          list($attrib, $val) = _parsley_js_rule_parser('required');
          $element['#attributes'][$attrib] = array($val);
        }
      }
    }
  }
}

/**
 * Helper function to set the attribs
 * Might move this out to it's own file later on
 */
function _parsley_js_rule_parser($rule) {
  switch ($rule) {
    case 'numeric':
      return array('parsley-type', 'number');
      break;
    case 'required':
      return array('parsley-required', 'true');
      break;
  }
}

function parsley_js_test_form($form, &$form_state) {
  $form = array();

  $form['testrequired'] = array(
    '#type' => 'textfield',
    '#title' => t('Test Required'),
    '#required' => TRUE,
  );

  $form['testnumeric'] = array(
    '#type' => 'textfield',
    '#title' => t('Test Numeric'),
    '#rules' => array(
      'numeric'
    ),
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Ok'
  );

  return $form;
}


/**
 * Implements hook_libraries_info() from the libraries module
 */
function parsley_js_libraries_info() {
  $libraries = array();
  $libraries['parsleyjs'] = array(
    'name' => 'Parsley JS',
    'vendor url' => 'http://parsleyjs.org/',
    'download url' => 'https://github.com/guillaumepotier/Parsley.js/releases',
    'version arguments' => array(
      'file' => 'CHANGELOG.md',
      //The version in the CHANGELOG.md is usually this pattern **x.x.x**
      'pattern' => '@\*\*([0-9\.]+)@',
      'lines' => 5,
    ),
    'files' => array(
      'js' => array(
        'parsley.js',

      ),
      'variants' => array(
        'minified' => array(
          'files' => array(
            'js' => array(
              'dist/parsley.min.js',
            ),
          ),
        ),
        'source' => array(
          'files' => array(
            'js' => array(
              'parsley.js',
            ),
          ),
        ),
      ),
    )
  );
  return $libraries;
}
